<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 实体类接口的类全名 -->
<mapper namespace="cn.guardwhy.dao.UserMapper">
    <!--当前映射文件开启二级缓存-->
    <cache></cache>
    <!--1.1 创建User映射-->
    <resultMap id="userMap" type="user">
        <!--映射主键-->
        <id column="id" property="id"></id>
        <result column="user_name" property="username"></result>
        <result column="birthday" property="birthday"></result>
        <result column="sex" property="sex"></result>
        <result column="address" property="address"></result>
    </resultMap>

    <!--1.2创建orders映射-->
    <resultMap id="orderMap" type="orders">
        <id column="oid" property="id"></id>
        <result column="ordertime" property="ordertime"></result>
        <result column="total" property="total"></result>
    </resultMap>

    <!--1.3 配置1对多的映射-->
    <resultMap id="userOrdersMap" type="user" extends="userMap">
        <!--
        property: 多方的属性名 javaType：多方的属性类型
        ofType: 集合中每个元素的类型 resultMap：多方映射
        -->
        <collection property="ordersList" javaType="List" ofType="Orders" resultMap="orderMap"></collection>
    </resultMap>

    <!--1.4一对多关联查询-->
    <select id="findAllWithOrder" resultMap="userOrdersMap">
        select * from orders o right join user u on o.oid =u.id
    </select>

    <!--1.1 创建User映射-->
    <resultMap id="userMap1" type="user">
        <!--映射主键-->
        <id column="id" property="id"></id>
        <result column="user_name" property="username"></result>
        <result column="birthday" property="birthday"></result>
        <result column="sex" property="sex"></result>
        <result column="address" property="address"></result>
    </resultMap>

    <!--2.2 配置角色的映射-->
    <resultMap id="roleMap" type="role">
        <id property="id" column="id"></id>
        <id property="roleName" column="role_name"/>
        <id property="roleDetail" column="role_detail"/>
    </resultMap>

    <!--2.3配置多对多的映射-->
    <resultMap id="userAndRoleMap" type="user" extends="userMap1">
        <!--
           property: 多方的属性名
           javaType：多方的属性类型
           ofType: 集合中每个元素的类型
           resultMap：多方映射
       -->
        <collection property="roleList" javaType="List" ofType="Role" resultMap="roleMap"/>
    </resultMap>
    <!--2.4 多对多的关联查询-->
    <select id="findAllWithRole" resultMap="userAndRoleMap">
        select u.*, r.id rid, r.role_name, r.role_detail from user u left join user_role ur on u.id = ur.user_id
																	 left join role r on ur.role_id = r.id
    </select>




    <!--=====================================================-->
    <!--1.1 根据id查询用户-->
    <select id="findById" resultType="User" parameterType="int" useCache="true">
        <!--
            <select>标签中设置useCache=”true”代表当前这个statement要使用二级缓存。
            如果不使用二级缓存可以设置为false
            注意：
            针对每次查询都需要最新的数据sql，要设置成useCache="false"，禁用二级缓存。
        -->
        select * from user where id = #{id}
    </select>

    <resultMap id="userMap2" type="user">
        <!--映射主键-->
        <id column="id" property="id"></id>
        <result column="user_name" property="username"></result>
        <result column="birthday" property="birthday"></result>
        <result column="sex" property="sex"></result>
        <result column="address" property="address"></result>
        <!--根据用户id查询订单表-->
        <collection property="ordersList" column="id" ofType="Orders" select="OrderMapper.findByOid"/>
    </resultMap>

    <!--2.1 一对多嵌套查询-->
    <select id="findAllWithOrders" resultMap="userMap2">
        select * from user
    </select>
</mapper>